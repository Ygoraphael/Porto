package fme;

import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































class CBTabela_DR_SNC
  extends CBTabela
{
  Frame_DR_SNC P14;
  
  public String getPagina()
  {
    return "DR_SNC";
  }
  

  int tab_index = 0;
  boolean is_inov = true;
  
  CBTabela_DR_SNC() {
    P14 = ((Frame_DR_SNC)fmeApp.Paginas.getPage("DR_SNC"));
    if (P14 == null) return;
    initialize();
  }
  
  CBTabela_DR_SNC(Frame_DR_SNC p, int idx) {
    P14 = p;
    tab_index = idx;
    initialize();
  }
  
  void initialize() {
    tag = "DR_SNC";
    started = true;
    
    cols = new CHTabColModel[13];
    cols[0] = new CHTabColModel("conta", "Conta", true, false, false, null);
    cols[1] = new CHTabColModel("conta_d", "Rubricas", false, false, false, null);
    cols[2] = new CHTabColModel("val_p3", "Ano -3", true, true, true, CFLib.VLD_VALOR_S);
    cols[3] = new CHTabColModel("val_p2", "Ano -2", true, true, true, CFLib.VLD_VALOR_S);
    cols[4] = new CHTabColModel("val_p1", "Ano -1", true, true, true, CFLib.VLD_VALOR_S);
    cols[5] = new CHTabColModel("val_0", "Ano 0", true, true, true, CFLib.VLD_VALOR_S);
    cols[6] = new CHTabColModel("val_1", "Ano 1", true, true, true, CFLib.VLD_VALOR_S);
    cols[7] = new CHTabColModel("val_2", "Ano 2", true, true, true, CFLib.VLD_VALOR_S);
    cols[8] = new CHTabColModel("val_3", "Ano 3", true, true, true, CFLib.VLD_VALOR_S);
    cols[9] = new CHTabColModel("val_4", "Ano 4", true, true, true, CFLib.VLD_VALOR_S);
    cols[10] = new CHTabColModel("val_5", "Ano 5", true, true, is_inov, CFLib.VLD_VALOR_S);
    cols[11] = new CHTabColModel("val_6", "Ano 6", true, true, is_inov, CFLib.VLD_VALOR_S);
    cols[12] = new CHTabColModel("val_7", "Ano 7", true, true, is_inov, CFLib.VLD_VALOR_S);
    
    init_dados(30);
    

    init_handler(new CHTabQuadro(), P14.getJTable_DR_SNC());
    P14.getJTable_DR_SNC().addKeyListener(new TableKeyListener(this));
    handler.width = P14.getJScrollPane_DR_SNC().getWidth();
    
    handler.set_col_text(2, 0.2D, "R");
    handler.set_col_text(3, 0.2D, "R");
    handler.set_col_text(4, 0.2D, "R");
    handler.set_col_text(5, 0.2D, "R");
    handler.set_col_text(6, 0.2D, "R");
    handler.set_col_text(7, 0.2D, "R");
    handler.set_col_text(8, 0.2D, "R");
    handler.set_col_text(9, 0.2D, "R");
    if (is_inov) {
      handler.set_col_text(10, 0.2D, "R");
      handler.set_col_text(11, 0.2D, "R");
      handler.set_col_text(12, 0.2D, "R");
    }
    
    cols[0].disable_row_calc = true;
    cols[1].disable_row_calc = true;
    
    ((CHTabQuadro)handler).start_rows();
    handler).row_editable[14] = false;
    handler).row_editable[17] = false;
    handler).row_editable[20] = false;
    handler).row_editable[23] = false;
    handler).row_editable[26] = false;
    handler).row_editable[28] = false;
    
    keyCol = 0;
    
    ((String[])dados.elementAt(0))[0] = "s01";
    ((String[])dados.elementAt(1))[0] = "s02";
    ((String[])dados.elementAt(2))[0] = "s03";
    ((String[])dados.elementAt(3))[0] = "s04";
    ((String[])dados.elementAt(4))[0] = "s05";
    ((String[])dados.elementAt(5))[0] = "s06";
    ((String[])dados.elementAt(6))[0] = "s07";
    ((String[])dados.elementAt(7))[0] = "s08";
    ((String[])dados.elementAt(8))[0] = "s09";
    ((String[])dados.elementAt(9))[0] = "s10";
    ((String[])dados.elementAt(10))[0] = "s11";
    ((String[])dados.elementAt(11))[0] = "s12";
    ((String[])dados.elementAt(12))[0] = "s26";
    ((String[])dados.elementAt(13))[0] = "s13";
    ((String[])dados.elementAt(14))[0] = "s14";
    ((String[])dados.elementAt(15))[0] = "s1401";
    ((String[])dados.elementAt(16))[0] = "s1499";
    ((String[])dados.elementAt(17))[0] = "s15";
    ((String[])dados.elementAt(18))[0] = "s1501";
    ((String[])dados.elementAt(19))[0] = "s1599";
    ((String[])dados.elementAt(20))[0] = "s16";
    ((String[])dados.elementAt(21))[0] = "s17";
    ((String[])dados.elementAt(22))[0] = "s18";
    ((String[])dados.elementAt(23))[0] = "s19";
    ((String[])dados.elementAt(24))[0] = "s20";
    ((String[])dados.elementAt(25))[0] = "s21";
    ((String[])dados.elementAt(26))[0] = "s22";
    ((String[])dados.elementAt(27))[0] = "s23";
    ((String[])dados.elementAt(28))[0] = "s24";
    ((String[])dados.elementAt(29))[0] = "s25";
    


    ((String[])dados.elementAt(0))[1] = " Vendas e serviços prestados";
    ((String[])dados.elementAt(1))[1] = " Subsídios à exploração";
    ((String[])dados.elementAt(2))[1] = " Ganhos/perdas imputados de subsidiárias, associadas a empreendimentos conjuntos";
    ((String[])dados.elementAt(3))[1] = " Variação nos inventários da produção";
    ((String[])dados.elementAt(4))[1] = " Trabalhos para a própria entidade";
    ((String[])dados.elementAt(5))[1] = " Custo das mercadorias vendidas e das matérias consumidas";
    ((String[])dados.elementAt(6))[1] = " Fornecimentos e serviços externos";
    ((String[])dados.elementAt(7))[1] = " Gastos com o pessoal";
    ((String[])dados.elementAt(8))[1] = " Imparidade de inventários (perdas/reversões)";
    ((String[])dados.elementAt(9))[1] = " Imparidade de dívidas a receber (perdas/reversões)";
    ((String[])dados.elementAt(10))[1] = " Provisões (aumentos/reduções)";
    ((String[])dados.elementAt(11))[1] = " Imparidade de investimentos não depreciáveis/amortizáveis (perdas/reversões)";
    ((String[])dados.elementAt(12))[1] = " Outras imparidades (perdas/reversões) / Imparidades (perdas/reversões) (*)";
    ((String[])dados.elementAt(13))[1] = " Aumentos/reduções de justo valor";
    ((String[])dados.elementAt(14))[1] = " Outros rendimentos e ganhos";
    ((String[])dados.elementAt(15))[1] = "      Rendimentos suplementares";
    ((String[])dados.elementAt(16))[1] = "      Outros";
    ((String[])dados.elementAt(17))[1] = " Outros gastos e perdas";
    ((String[])dados.elementAt(18))[1] = "      Impostos indiretos";
    ((String[])dados.elementAt(19))[1] = "      Outros";
    ((String[])dados.elementAt(20))[1] = " Resultado antes de depreciações, gastos de financiamento e impostos";
    ((String[])dados.elementAt(21))[1] = " Gastos/reversões de depreciação e de amortização";
    ((String[])dados.elementAt(22))[1] = " Imparidade de Investimentos depreciáveis/amortizáveis (perdas/reversões)";
    ((String[])dados.elementAt(23))[1] = " Resultado operacional (antes de gastos de financiamento e impostos)";
    ((String[])dados.elementAt(24))[1] = " Juros e rendimentos similares obtidos";
    ((String[])dados.elementAt(25))[1] = " Juros e gastos similares suportados";
    ((String[])dados.elementAt(26))[1] = " Resultado antes de impostos";
    ((String[])dados.elementAt(27))[1] = " Imposto sobre o rendimento do período";
    ((String[])dados.elementAt(28))[1] = " Resultado líquido do período";
    ((String[])dados.elementAt(29))[1] = " Resultado das atividades descontinuadas (líquido de impostos) incluído no resultado líquido do período";
    

    handler).row_autocalc[14] = "$soma(+15,+16)";
    handler).row_autocalc[17] = "$soma(+18,+19)";
    handler).row_autocalc[20] = "$soma(+0,+1,+2,+3,+4,-5,-6,-7,-8,-9,-10,-11,-12,+13,+14,-17)";
    handler).row_autocalc[23] = "$soma(+20,-21,-22)";
    handler).row_autocalc[26] = "$soma(+23,+24,-25)";
    handler).row_autocalc[28] = "$soma(+26,-27)";
    
    CBData.Params.bind_ano_cand_update(this);
  }
  
  void on_update(String colname, int nRow, String v) {
    autocalc();
    if (nRow == 0) calc_vol_neg_tt();
    handler.j.repaint();
  }
  
  void calc_vol_neg_tt() {
    CBData.vol_neg_pos = "";
  }
  















  public double calc_meios_lib(String colName)
  {
    double meios_lib = 0.0D;
    for (int i = 0; i < dados.size(); i++) {
      if (((String[])dados.elementAt(i))[0].matches("s24|s17|s18|s09|s10|s11|s12|s26"))
        meios_lib += _lib.to_double(getColValue(colName, i));
      if (((String[])dados.elementAt(i))[0].matches("s13"))
        meios_lib -= _lib.to_double(getColValue(colName, i));
    }
    return meios_lib;
  }
  
  public void on_external_update(String tag) {
    int ano = (int)CBData.Params.getByName("ano_cand").valueAsDouble();
    cols[2].col_name = Integer.toString(ano - 3);
    cols[3].col_name = Integer.toString(ano - 2);
    cols[4].col_name = Integer.toString(ano - 1);
    cols[5].col_name = Integer.toString(ano);
    cols[6].col_name = Integer.toString(ano + 1);
    cols[7].col_name = Integer.toString(ano + 2);
    cols[8].col_name = Integer.toString(ano + 3);
    cols[9].col_name = Integer.toString(ano + 4);
    cols[10].col_name = Integer.toString(ano + 5);
    cols[11].col_name = Integer.toString(ano + 6);
    cols[12].col_name = Integer.toString(ano + 7);
    handler.repaint_col_names();
  }
  
  CHValid_Grp validar(CHValid_Grp err_list, String cp)
  {
    String titulo = "Demonstrações de Resultados";
    if (cp.length() > 0) titulo = titulo + cp;
    if (err_list == null) { err_list = new CHValid_Grp(this, titulo);
    }
    
    if ((isEmpty()) && (tab_index > 0)) { return err_list;
    }
    int ano_cand = (int)CBData.Params.getByName("ano_cand").valueAsDouble();
    int ano_inicial = ano_cand;
    String v = PromotorgetByName"dt_inicio_act"v;
    if (v.length() == 10)
      ano_inicial = Integer.parseInt(v.substring(0, 4));
    int idx_i = 5 - (ano_cand - ano_inicial);
    if (idx_i < 2) { idx_i = 2;
    }
    int n_anos = 1;
    int ano_fim = ano_cand + n_anos;
    String vf = DadosProjectogetByName"dt_fim"v;
    if (vf.length() == 10) {
      ano_fim = Integer.parseInt(vf.substring(0, 4)) + n_anos;
    }
    for (int i = idx_i; i <= 12; i++) {
      String ano_s = cols[i].col_name;
      
      if ((isColEmpty(i)) && (Integer.parseInt(ano_s) <= ano_fim)) {
        err_list.add_msg(new CHValid_Msg("demo", "Demonstração de Resultados obrigatória para o ano " + ano_s));
      } else if (!isColEmpty(i)) {
        double res_liq_bal = _lib.round(_lib.to_double(((String[])Balanco_SNCdados.elementAt(39))[i]));
        double res_liq_dr = _lib.round(_lib.to_double(((String[])dados.elementAt(28))[i]));
        if (res_liq_dr != res_liq_bal)
          err_list.add_msg(new CHValid_Msg("demo", 
            "O Resultado Líquido do Período na Demonstração de Resultados tem de ser igual ao do Balanço para o ano " + ano_s));
      }
    }
    return err_list;
  }
}
