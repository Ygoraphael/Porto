package fme;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































class CBTabela_QInv
  extends CBTabela
{
  public String getPagina()
  {
    return "QInv";
  }
  
  public SteppedComboBox cboAtividades = null;
  public SteppedComboBox cboEstabs = null;
  public SteppedComboBox cboEmpresas = null;
  public SteppedComboBox cboPME = null;
  
  Frame_QInv P12;
  boolean internac = CParseConfig.hconfig.get("tipologia2").toString().equals("I");
  
  String baixa_densidade = CParseConfig.hconfig.get("baixa_dens") != null ? (String)CParseConfig.hconfig.get("baixa_dens") : "";
  
  CBTabela_QInv() {
    tag = "Inv";
    P12 = ((Frame_QInv)fmeApp.Paginas.getPage("QInv"));
    
    if (P12 == null) return;
    started = true;
    
    cols = new CHTabColModel[21];
    cols[0] = new CHTabColModel("n_ordem", "Nº", true, false, true, CFLib.VLD_INT);
    cols[1] = new CHTabColModel("atividade", "Atividade<br>de Inovação", true, true, true, null);
    cols[2] = new CHTabColModel("atividade_d", "Atividade<br>de Inovação<br>(Designação)", true, false, true, null);
    cols[3] = new CHTabColModel("design", "Designação", true, true, true, null);
    cols[4] = new CHTabColModel("excepcao", "Exceção", true, true, false, null);
    cols[4].is_check = true;
    cols[5] = new CHTabColModel("calendario", "Aquisição<br>(aaaa-mm)", true, true, true, CFLib.VLD_ANO_MES);
    cols[6] = new CHTabColModel("investimento", "Investimento", true, true, true, CFLib.VLD_VALOR);
    cols[7] = new CHTabColModel("elegivel", "Elegível", true, true, true, CFLib.VLD_VALOR_0);
    cols[8] = new CHTabColModel("classe", "Classificação das Despesas (id)", true, true, false, null);
    cols[9] = new CHTabColModel("classe_d", "Classificação das Despesas", false, true, true, null);
    cols[10] = new CHTabColModel("tipologia", "Tipologia da Operação (id)", true, true, false, null);
    cols[11] = new CHTabColModel("tipologia_d", "Tipologia da Operação", false, false, true, null);
    cols[12] = new CHTabColModel("snc", "SNC (id)", true, true, false, null);
    cols[13] = new CHTabColModel("snc_d", "SNC", false, true, true, null);
    cols[14] = new CHTabColModel("mercado", "Mercado (id)", true, true, false, null);
    cols[15] = new CHTabColModel("mercado_d", "Mercado", false, true, internac, null);
    cols[16] = new CHTabColModel("estab", "Estab.", true, true, true, null);
    cols[17] = new CHTabColModel("concelho", "Concelho (id)", true, true, false, null);
    cols[18] = new CHTabColModel("concelho_d", "Concelho", false, false, true, null);
    cols[19] = new CHTabColModel("nuts_ii", "NUTS II (id)", false, true, false, null);
    cols[20] = new CHTabColModel("nuts_ii_d", "NUTS II", false, false, true, null);
    
    init_dados(14);
    

    init_handler(P12.getJTable_QInv());
    P12.getJTable_QInv().addKeyListener(new TableKeyListener(this));
    handler.width = P12.getJScrollPane_QInv().getWidth();
    
    ui = new GroupableTableHeaderUI();
    ui.setH(1, P12.getJTable_QInv());
    
    int i = 0;
    ui.add_col(i++, 0, 1, 1, "Nº");
    ui.add_col(i++, 0, 2, 1, "Atividade de Inovação");i++;
    ui.add_col(i++, 0, 1, 1, "Designação");
    
    ui.add_col(i++, 0, 1, 1, "<html><center>Aquisição<br>(aaaa-mm)</center></html>");
    ui.add_col(i++, 0, 1, 1, "Investimento");
    ui.add_col(i++, 0, 1, 1, "Elegível");
    ui.add_col(i++, 0, 1, 1, "Classificação das Despesas");
    ui.add_col(i++, 0, 1, 1, "Tipologia da Operação");
    ui.add_col(i++, 0, 1, 1, "SNC");
    if (internac)
      ui.add_col(i++, 0, 1, 1, "Mercado");
    ui.add_col(i++, 0, 1, 1, "Estab.");
    ui.add_col(i++, 0, 1, 1, "Concelho");
    ui.add_col(i++, 0, 1, 1, "NUTS II");
    
    P12.getJTable_QInv().getTableHeader().setUI(ui);
    
    handler.set_col_text(0, 0.06D, "C");
    cboAtividades = handler.set_col_comboD(1, 0.06D, "C", CTabelas.Atividades, 0, 200);
    handler.set_col_text(2, 0.2D, null);
    handler.set_col_text(3, 0.25D, null);
    
    handler.set_col_text(5, 0.1D, null);
    handler.set_col_text(6, 0.15D, "R");
    handler.set_col_text(7, 0.15D, "R");
    handler.set_col_comboS(9, 0.25D, null, CTabelas.TipoDesp, 1, 380);
    handler.set_col_comboS(11, 0.25D, null, CTabelas.TipoProj, 1, 350);
    handler.set_col_comboS(13, 0.25D, null, CTabelas.RubricasSNC, 1, 320);
    if (internac)
      handler.set_col_comboS(15, 0.25D, null, CTabelas.Pais, 1, 170);
    cboEstabs = handler.set_col_comboFD(16, 0.075D, "C", CTabelas.EstabsF1, 1, 200);
    handler.set_col_text(18, 0.2D, null);
    handler.set_col_text(20, 0.15D, null);
    
    CBData.Atividades.addClient(this, "atividade", cboAtividades, " no Quadro de Investimentos");
    
    started = true;
  }
  
  void on_update(String colname, int nRow, String v)
  {
    numerar(0);
    if (colname.equals("classe_d")) {
      String classe = "";
      if (v.length() > 0) classe = CTabelas.TipoDesp.lookup(1, v, 0);
      setColValue("classe", nRow, classe);
    }
    if (colname.equals("classe")) {
      String classe_d = "";
      if (v.length() > 0) classe_d = CTabelas.TipoDesp.lookup(0, v, 1);
      setColValue("classe_d", nRow, classe_d);
    }
    if (colname.equals("snc_d")) {
      String snc = "";
      if (v.length() > 0) snc = CTabelas.RubricasSNC.lookup(1, v, 0);
      setColValue("snc", nRow, snc);
    }
    if (colname.equals("snc")) {
      String snc_d = "";
      if (v.length() > 0) snc_d = CTabelas.RubricasSNC.lookup(0, v, 1);
      setColValue("snc_d", nRow, snc_d);
    }
    if (colname.equals("tipologia_d")) {
      String tipologia = "";
      if (v.length() > 0) tipologia = CTabelas.TipoProj.lookup(1, v, 0);
      setColValue("tipologia", nRow, tipologia);
    }
    if (colname.equals("tipologia")) {
      String tipologia_d = "";
      if (v.length() > 0) tipologia_d = CTabelas.TipoProj.lookup(0, v, 1);
      setColValue("tipologia_d", nRow, tipologia_d);
    }
    if (colname.equals("mercado_d")) {
      String mercado = "";
      if (v.length() > 0) mercado = CTabelas.Pais.lookup(1, v, 0);
      setColValue("mercado", nRow, mercado);
    }
    if (colname.equals("mercado")) {
      String mercado_d = "";
      if (v.length() > 0) mercado_d = CTabelas.Pais.lookup(0, v, 1);
      setColValue("mercado_d", nRow, mercado_d);
    }
    if (colname.equals("estab")) {
      String concelho = "";
      String concelho_d = "";
      if (v.length() > 0) {
        CTabelas.EstabsF1.set_filter(3, "0");
        concelho = CTabelas.EstabsF1.lookup(0, v, 2);
      }
      
      setColValue("concelho", nRow, concelho);
      on_update("concelho", nRow, concelho);
    }
    
    if (colname.equals("concelho"))
    {

      if ((CBData.reading_xml) && (v.length() > 0)) {
        String estab = getColValue("estab", nRow);
        if (estab.length() == 0) {
          setColValue("concelho", nRow, "");
          setColValue("concelho_d", nRow, "");
          on_update("nuts_ii", nRow, "");
          setColValue("nuts_ii", nRow, "");
          return;
        }
      }
      

      String concelho_d = "";
      if (v.length() > 0) {
        concelho_d = CTabelas.Concelhos.lookup(0, v, 1);
      }
      setColValue("concelho_d", nRow, concelho_d);
      if (v.length() > 0) {
        int idx = CTabelas.Concelhos.getIndexFromCode(v) + 1;
        String nuts = CTabelas.Concelhos.getColFromIndex(idx, 2).substring(0, 2);
        if ((nuts.length() > 0) && (!nuts.equals("99")))
        {
          setColValue("nuts_ii", nRow, nuts);
          on_update("nuts_ii", nRow, nuts);
        } else {
          setColValue("nuts_ii", nRow, "");
          setColValue("nuts_ii_d", nRow, "");
        }
      }
      else {
        setColValue("nuts_ii", nRow, "");
        on_update("nuts_ii", nRow, "");
      }
    }
    
    if (colname.equals("nuts_ii")) {
      String nuts_ii_d = "";
      if (v.length() > 0)
        nuts_ii_d = CTabelas.NUTS_II.lookup(0, v, 1);
      setColValue("nuts_ii_d", nRow, nuts_ii_d);
    }
    
    if (colname.equals("atividade")) {
      String atividade_d = "";
      if (v.length() > 0)
        atividade_d = CTabelas.Atividades.lookup(0, v, 1);
      setColValue("atividade_d", nRow, atividade_d);
      if (!CBData.reading_xml) {
        String tipologia = "";
        if (v.length() > 0) {
          tipologia = CTabelas.Atividades.lookup(0, v, 2);
        }
        

        setColValue("tipologia", nRow, tipologia);
        on_update("tipologia", nRow, tipologia);
      }
    }
    















    if (!CBData.reading_xml) calc_dados_projecto();
    handler.j.repaint();
  }
  












  boolean existem_estabs()
  {
    for (int i = 0; i < dados.size(); i++) {
      if (getColValue("estab", i).length() > 0)
        return true;
    }
    return false;
  }
  
  void limpar_estabs() {
    for (int i = 0; i < dados.size(); i++) {
      setColValue("estab", i, "");
      on_update("estab", i, "");
    }
  }
  
  void _filter_populate_estabs(SteppedComboBox cboEstabs, int row) {
    String estabs = getColValue("estab", row);
    CTabelas.EstabsF1.set_filter(3, "0");
    CTabelas.EstabsF1._populateComboBox(cboEstabs, 0);
    if (estabs.length() > 0) {
      int n = CTabelas.EstabsF1.getIndexFromCode(estabs);
      if (n >= 0) cboEstabs.setSelectedIndex(n + 1);
    }
  }
  
  String on_xml(String tag, int row, String v) {
    String s = "";
    if (tag.equals("classe"))
      s = s + _lib.xml_encode("classe_d", getColValue("classe_d", row));
    if (tag.equals("snc"))
      s = s + _lib.xml_encode("snc_d", getColValue("snc_d", row));
    if (tag.equals("tipologia"))
      s = s + _lib.xml_encode("tipologia_d", getColValue("tipologia_d", row));
    if (tag.equals("mercado"))
      s = s + _lib.xml_encode("mercado_d", getColValue("mercado_d", row));
    if (tag.equals("custos"))
      s = s + _lib.xml_encode("custos_d", getColValue("custos_d", row));
    if (tag.equals("concelho")) {
      s = s + _lib.xml_encode("concelho_d", getColValue("concelho_d", row));
      s = s + _lib.xml_encode("nuts_ii", getColValue("nuts_ii", row));
      s = s + _lib.xml_encode("nuts_ii_d", getColValue("nuts_ii_d", row));
    }
    return s;
  }
  
  void calc_dados_projecto() {
    if (!Finanstarted) return;
    double inv = _lib.round(getSum("investimento"));
    double c_fse = 0.0D;
    
    CBData.investimento = _lib.to_string(inv + c_fse);
    

    CBData.DadosProjecto.getByName("investimento").setStringValue(_lib.to_string(inv + c_fse));
    
    double eleg = _lib.round(getSum("elegivel"));
    
    CBData.elegivel = _lib.to_string(eleg + c_fse);
    CBData.DadosProjecto.getByName("elegivel").setStringValue(Double.toString(eleg + c_fse));
    
    String ano_cand = CBData.Params.getByName("ano_cand").getStringValue();
    if (ano_cand.length() > 0) {
      int row_inv = CBData.Finan.h(20);
      int row_eleg = CBData.Finan.h(21);
      

      int ano = Integer.parseInt(ano_cand);
      double fse_1 = 0.0D;
      String inv_1 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano - 1)) + fse_1));
      ((String[])Finandados.elementAt(row_inv))[2] = inv_1;
      String eleg_1 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano - 1)) + fse_1));
      ((String[])Finandados.elementAt(row_eleg))[2] = eleg_1;
      
      double fse0 = 0.0D;
      String inv0 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano)) + fse0));
      ((String[])Finandados.elementAt(row_inv))[3] = inv0;
      String eleg0 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano)) + fse0));
      ((String[])Finandados.elementAt(row_eleg))[3] = eleg0;
      
      double fse1 = 0.0D;
      String inv1 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 1)) + fse1));
      ((String[])Finandados.elementAt(row_inv))[4] = inv1;
      String eleg1 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 1)) + fse1));
      ((String[])Finandados.elementAt(row_eleg))[4] = eleg1;
      
      double fse2 = 0.0D;
      String inv2 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 2)) + fse2));
      ((String[])Finandados.elementAt(row_inv))[5] = inv2;
      String eleg2 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 2)) + fse2));
      ((String[])Finandados.elementAt(row_eleg))[5] = eleg2;
      
      double fse3 = 0.0D;
      String inv3 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 3)) + fse3));
      ((String[])Finandados.elementAt(row_inv))[6] = inv3;
      String eleg3 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 3)) + fse3));
      ((String[])Finandados.elementAt(row_eleg))[6] = eleg3;
      
      String inv4 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 4))));
      ((String[])Finandados.elementAt(row_inv))[7] = inv4;
      String eleg4 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 4))));
      ((String[])Finandados.elementAt(row_eleg))[7] = eleg4;
      
      String inv5 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 5))));
      ((String[])Finandados.elementAt(row_inv))[8] = inv5;
      String eleg5 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 5))));
      ((String[])Finandados.elementAt(row_eleg))[8] = eleg5;
      
      String inv6 = _lib.to_string(_lib.round(getSum("investimento", Integer.toString(ano + 6))));
      ((String[])Finandados.elementAt(row_inv))[9] = inv6;
      String eleg6 = _lib.to_string(_lib.round(getSum("elegivel", Integer.toString(ano + 6))));
      ((String[])Finandados.elementAt(row_eleg))[9] = eleg6;
      







      CBData.Finan.on_update("val_p1", row_inv, "");
      CBData.Finan.on_update("val_p1", row_eleg, "");
      











































































      calc_regioes();
    }
  }
  
  void calc_regioes()
  {
    double inv = _lib.round(getSum("investimento"));
    double inv_fse = 0.0D;
    
    double internac = 0.0D;
    double nute_norte = 0.0D;
    double nute_centro = 0.0D;
    double nute_lisboa = 0.0D;
    double nute_alentejo = 0.0D;
    double nute_algarve = 0.0D;
    

    for (int i = 0; i < dados.size(); i++) {
      if (getColValue("tipologia", i).startsWith("10")) {
        internac += _lib.to_double(getColValue("investimento", i));
      }
      
      if (getColValue("nuts_ii", i).equals("11"))
        nute_norte += _lib.to_double(getColValue("investimento", i));
      if (getColValue("nuts_ii", i).equals("16"))
        nute_centro += _lib.to_double(getColValue("investimento", i));
      if (getColValue("nuts_ii", i).equals("17"))
        nute_lisboa += _lib.to_double(getColValue("investimento", i));
      if (getColValue("nuts_ii", i).equals("18"))
        nute_alentejo += _lib.to_double(getColValue("investimento", i));
      if (getColValue("nuts_ii", i).equals("15")) {
        nute_algarve += _lib.to_double(getColValue("investimento", i));
      }
    }
    










    double nute_norte_fse = 0.0D;
    double nute_centro_fse = 0.0D;
    double nute_lisboa_fse = 0.0D;
    double nute_alentejo_fse = 0.0D;
    double nute_algarve_fse = 0.0D;
    

















































    nute_norte += nute_norte_fse;
    nute_centro += nute_centro_fse;
    nute_lisboa += nute_lisboa_fse;
    nute_alentejo += nute_alentejo_fse;
    nute_algarve += nute_algarve_fse;
    
    double perc_internac = internac / inv * 100.0D;
    CBData.perc_internac = _lib.to_string(perc_internac);
    double norte = _lib.round(nute_norte / (inv + inv_fse) * 100.0D);
    CBData.nuts_ii_norte = norte != 0.0D ? _lib.to_string(norte) : "";
    double centro = _lib.round(nute_centro / (inv + inv_fse) * 100.0D);
    CBData.nuts_ii_centro = centro != 0.0D ? _lib.to_string(centro) : "";
    double lisboa = _lib.round(nute_lisboa / (inv + inv_fse) * 100.0D);
    CBData.nuts_ii_lisboa = lisboa != 0.0D ? _lib.to_string(lisboa) : "";
    double alentejo = _lib.round(nute_alentejo / (inv + inv_fse) * 100.0D);
    CBData.nuts_ii_alentejo = alentejo != 0.0D ? _lib.to_string(alentejo) : "";
    double algarve = _lib.round(nute_algarve / (inv + inv_fse) * 100.0D);
    CBData.nuts_ii_algarve = algarve != 0.0D ? _lib.to_string(algarve) : "";
    







    String PO = "";
    
    if (baixa_densidade.equals("1")) {
      if (nute_norte > 0.0D) PO = PO + "05;";
      if (nute_centro > 0.0D) PO = PO + "06;";
      if (nute_lisboa > 0.0D) PO = PO + "07;";
      if (nute_alentejo > 0.0D) PO = PO + "08;";
      if (nute_algarve > 0.0D) PO = PO + "09;";
    }
    else if ((nute_lisboa > 0.0D) && (nute_norte == 0.0D) && (nute_centro == 0.0D) && (nute_alentejo == 0.0D) && (nute_algarve == 0.0D)) { PO = PO + "07;";
    } else if ((nute_lisboa == 0.0D) && (nute_norte == 0.0D) && (nute_centro == 0.0D) && (nute_alentejo == 0.0D) && (nute_algarve > 0.0D)) { PO = PO + "09;";
    } else {
      if (DimensaogetByName"dimensao"v.matches("1|2")) {
        if ((nute_norte > 0.0D) && (nute_centro == 0.0D) && (nute_alentejo == 0.0D)) { PO = PO + "05;";
        } else if ((nute_norte == 0.0D) && (nute_centro > 0.0D) && (nute_alentejo == 0.0D)) { PO = PO + "06;";
        } else if ((nute_norte == 0.0D) && (nute_centro == 0.0D) && (nute_alentejo > 0.0D)) { PO = PO + "08;";
        } else if ((nute_norte > 0.0D) || (nute_centro > 0.0D) || (nute_alentejo > 0.0D)) PO = PO + "01;";
      }
      else if ((nute_norte > 0.0D) || (nute_centro > 0.0D) || (nute_alentejo > 0.0D)) { PO = PO + "01;";
      }
      if (nute_lisboa > 0.0D) PO = PO + "07;";
      if (nute_algarve > 0.0D) { PO = PO + "09;";
      }
    }
    if (PO.length() > 0) PO = PO.substring(0, PO.length() - 1);
    CBData.Params.getByName("aut_gestao").setStringValue(PO);
    
    CBData.Params.getByName("norte").setStringValue(CBData.nuts_ii_norte);
    CBData.Params.getByName("centro").setStringValue(CBData.nuts_ii_centro);
    CBData.Params.getByName("lisboa").setStringValue(CBData.nuts_ii_lisboa);
    CBData.Params.getByName("alentejo").setStringValue(CBData.nuts_ii_alentejo);
    CBData.Params.getByName("algarve").setStringValue(CBData.nuts_ii_algarve);
  }
  
  CHValid_Grp validar(CHValid_Grp err_list) { handler.__garbage_stop_editing();
    if (err_list == null) {
      err_list = new CHValid_Grp(this, "Quadro de Investimentos");
    }
    if (isEmpty()) {
      err_list.add_msg(new CHValid_Msg("q_invest", "Lista vazia"));
    }
    
    boolean quadros_tecn = false;
    
    String[] aviso = ((String)CParseConfig.hconfig.get("aviso")).split("_");
    
    String data_i = DadosProjectogetByName"dt_inicio"v;
    String data_f = DadosProjectogetByName"dt_fim"v;
    String ano_i = data_i.length() > 0 ? data_i.substring(0, 4) : "";
    String ano_f = data_f.length() > 0 ? data_f.substring(0, 4) : "";
    
    boolean dentro_bd = baixa_densidade.equals("1");
    boolean fora_bd = baixa_densidade.equals("0");
    String estabs_bd = estabs_bd_ok(dentro_bd, fora_bd);
    
    for (int i = 0; i < dados.size(); i++) {
      StringBuffer mask = new StringBuffer("RRRR-RRR-R-R-R--R----");
      
      String classe = getColValue("classe", i);
      if ((classe.matches("2.*|31.*|32.*")) && (internac)) {
        mask.setCharAt(getColIndex("mercado_d"), 'R');
      }
      TabError[] e = isIncompletAll(i, mask.toString());
      for (int ii = 0; (e != null) && (ii < e.length); ii++) {
        err_list.add_msg(new CHValid_Msg("incomplet", e[ii].msg("Linha %L incompleta: %T - %o")));
      }
      String calend = getColValue("calendario", i);
      
      if (data_i.length() == 10) {
        String dt_qi = data_i;
        if (calend.length() == 7) {
          dt_qi = calend;
          if ((dt_qi.compareTo(data_i.substring(0, 7)) < 0) && (classe.length() > 0) && (!classe.equals("910"))) {
            err_list.add_msg(new CHValid_Msg("dt_inicio", 
              "Linha " + (i + 1) + ": Calendarização Ano-Mês anterior à Data de Início do Projeto"));
          }
          String dt_today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
          if ((dt_qi.compareTo(dt_today.substring(0, 7)) >= 0) && (classe.equals("910"))) {
            err_list.add_msg(new CHValid_Msg("dt_inicio", 
              "Linha " + (i + 1) + ": Calendarização Ano-Mês tem de ser anterior à data da Candidatura"));
          }
          if ((data_f.length() > 0) && 
            (data_f.substring(0, 7).compareTo(calend) < 0)) {
            err_list.add_msg(new CHValid_Msg("calendario", 
              "Linha " + (i + 1) + ": Calendarização Ano-Mês posterior à Data de Fim do Projeto (" + data_f + ")"));
          }
          if ((CParseConfig.hconfig.get("limite_eleg") != null) && (((String)CParseConfig.hconfig.get("limite_eleg")).length() > 0) && 
            (((String)CParseConfig.hconfig.get("limite_eleg")).substring(0, 7).compareTo(calend) < 0)) {
            err_list.add_msg(new CHValid_Msg("calendario", 'W', 
              "Linha " + (i + 1) + ": Calendarização Ano-Mês posterior a " + (String)CParseConfig.hconfig.get("limite_eleg")));
          }
        }
      }
      
      double inv = _lib.to_double(((String[])QInvdados.elementAt(i))[CBData.QInv.getColIndex("investimento")]);
      double eleg = _lib.to_double(((String[])QInvdados.elementAt(i))[CBData.QInv.getColIndex("elegivel")]);
      if (_lib.round(eleg) > _lib.round(inv)) {
        err_list.add_msg(new CHValid_Msg("elegivel", "Linha " + (i + 1) + ": o Elegível não pode ser superior ao Investimento"));
      }
      if ((eleg > 0.0D) && (classe.matches("910|999"))) {
        err_list.add_msg(new CHValid_Msg("calendario", 
          "Linha " + (i + 1) + ": despesa classificada como '" + CTabelas.TipoDesp.getDesign(classe) + "' com valor Elegível > 0"));
      }
      
      String tip = getColValue("tipologia", i);
      boolean tip_selected = false;
      if (!tip.equals("")) {
        for (int ii = 0; ii < Tipologiadados.size(); ii++) {
          if (tip.equals(CBData.Tipologia.getColValue("tipologia", ii))) {
            if (!CBData.Tipologia.getColValue("select", ii).equals("S")) break;
            tip_selected = true;
            
            break;
          }
        }
      } else {
        tip_selected = true;
      }
      if (!tip_selected) {
        err_list.add_msg(new CHValid_Msg("tipologia", 
          "Linha " + (i + 1) + ": Tipologia de Operação não selecionada na página de Dados do Projeto"));
      }
      String estab = getColValue("estab", i);
      if (((dentro_bd) || (fora_bd)) && (estab.length() > 0) && (!estab.matches(estabs_bd)))
      {
        if (dentro_bd)
          err_list.add_msg(new CHValid_Msg("estab", 
            "Linha " + (i + 1) + ": Estabelecimento nº " + estab + estab_conc_freg(estab) + " fora dos territórios de baixa densidade"));
        if (fora_bd) {
          err_list.add_msg(new CHValid_Msg("estab", 
            "Linha " + (i + 1) + ": Estabelecimento nº " + estab + estab_conc_freg(estab) + " em território de baixa densidade"));
        }
      }
      if (getColValue("concelho", i).equals("9999")) {
        err_list.add_msg(new CHValid_Msg("concelho", 
          "Linha " + (i + 1) + ": Não pode apresentar investimentos no Estrangeiro"));
      }
      if (getColValue("classe", i).equals("130")) { quadros_tecn = true;
      }
    }
    


    if ((!quadros_tecn) && (QuadrosTecnstarted) && (!CBData.QuadrosTecn.isEmpty())) {
      err_list.add_msg(new CHValid_Msg("classe", 
        "Obrigatório incluir despesas com contratação de pessoal"));
    }
    
    String aviso_n_deve_lx_alg = "Para os projetos com investimentos localizados nas regiões de Lisboa e Algarve, a empresa deverá apresentar uma candidatura autónoma para os investimentos localizados nessas regiões.";
    String aviso_n_deve_alg = "Nos projetos com investimentos localizados na região do Algarve o promotor deve apresentar candidatura autónoma para os investimentos localizados nessa região.";
    String aviso_n_pode_lisboa = "Nos termos do Aviso de Abertura, o projeto não deverá incluir investimentos localizados na região NUTS II Lisboa.";
    
    if ((((String)CParseConfig.hconfig.get("nuts_invest")).equals("n_deve_lx_alg")) && (
      ((_lib.to_double(CBData.nuts_ii_lisboa) > 0.0D) && (_lib.to_double(CBData.nuts_ii_lisboa) != 100.0D)) || (
      (_lib.to_double(CBData.nuts_ii_algarve) > 0.0D) && (_lib.to_double(CBData.nuts_ii_algarve) != 100.0D)))) {
      err_list.add_msg(new CHValid_Msg("concelho", aviso_n_deve_lx_alg));
    }
    if ((((String)CParseConfig.hconfig.get("nuts_invest")).equals("n_deve_alg")) && 
      (_lib.to_double(CBData.nuts_ii_algarve) > 0.0D) && (_lib.to_double(CBData.nuts_ii_algarve) != 100.0D)) {
      err_list.add_msg(new CHValid_Msg("concelho", 'W', aviso_n_deve_alg));
    }
    
    if ((((String)CParseConfig.hconfig.get("nuts_invest")).equals("n_pode_lisboa")) && 
      (_lib.to_double(CBData.nuts_ii_lisboa) > 0.0D)) {
      err_list.add_msg(new CHValid_Msg("concelho", 'W', aviso_n_pode_lisboa));
    }
    























    return err_list;
  }
  
  String estabs_bd_ok(boolean dentro, boolean fora) {
    if ((!dentro) && (!fora)) return "";
    String territorios_bd = "1601.*|1603.*|1604.*|1605.*|1606.*|1610.*|0310.*|0313.*|0304.*|0307.*|1705.*|0309.*|0311.*|0104.*|1702.*|1703.*|1706.*|1709.*|1712.*|1713.*|1302.*|0305.*|1804.*|1813.*|1701.*|1801.*|0403.*|0404.*|1805.*|1704.*|1807.*|1707.*|1812.*|1708.*|1710.*|1711.*|1815.*|1818.*|1819.*|1820.*|0409.*|0914.*|1714.*|0401.*|0402.*|0405.*|0406.*|0407.*|0408.*|0410.*|0411.*|0412.*|0117.*|0601.*|0606.*|0607.*|0609.*|1808.*|0611.*|0612.*|0613.*|0614.*|0615.*|0616.*|0617.*|1002.*|1003.*|1007.*|1008.*|1013.*|0901.*|1802.*|1803.*|1806.*|1809.*|1810.*|1811.*|1814.*|1816.*|1817.*|1821.*|1822.*|1824.*|0502.*|0505.*|0506.*|0507.*|0508.*|0511.*|1401.*|1408.*|1411.*|1413.*|1417.*|0509.*|0510.*|1420.*|0902.*|0501.*|0903.*|0503.*|0904.*|0905.*|0504.*|0906.*|0907.*|0908.*|0909.*|0910.*|0911.*|0912.*|0913.*|1501.*|1505.*|0211.*|1509.*|0201.*|0202.*|0203.*|0204.*|0205.*|0206.*|0207.*|0208.*|0209.*|0210.*|0212.*|0213.*|0214.*|1407.*|1409.*|1201.*|1202.*|1203.*|1204.*|1205.*|1206.*|1207.*|1208.*|1209.*|1210.*|1211.*|1212.*|1213.*|1214.*|1215.*|0701.*|0702.*|0703.*|0704.*|0705.*|0706.*|0707.*|0708.*|0709.*|0710.*|0711.*|0712.*|0713.*|0714.*|0802.*|0803.*|0804.*|0809.*|0815.*|160209|160221|160223|160701|160753|160754|160755|160707|160709|160756|160757|160713|160717|160724|160727|160728|160729|160759|160760|160734|160746|160802|160805|160818|160819|160920|030120|030112|030126|030129|030877|011901|011905|130103|130107|130134|130118|130128|130129|130141|130143|130146|130139|010606|130740|010123|010127|060407|101501|101610|182305|182307|182310|182322|182329|182335|142105|142119|142121|142122|141808|141814|141817|141818|141820|141631|080802|080803|080807|080812|081306|081401|081404";
    String estabs_ok = "";
    for (int i = 0; i < PromLocaldados.size(); i++) {
      String freguesia = CBData.PromLocal.getColValue("freguesia", i);
      if (freguesia.length() != 0) {
        String estab = CBData.PromLocal.getColValue("n_estab", i);
        
        if ((dentro) && (freguesia.matches(territorios_bd)))
          estabs_ok = estabs_ok + estab + "|";
        if ((fora) && (!freguesia.matches(territorios_bd)))
          estabs_ok = estabs_ok + estab + "|";
      }
    }
    if (estabs_ok.length() > 0) return estabs_ok.substring(0, estabs_ok.length() - 1);
    return "";
  }
  
  String estab_conc_freg(String estab) {
    for (int i = 0; i < PromLocaldados.size(); i++)
      if (estab.equals(CBData.PromLocal.getColValue("n_estab", i))) {
        String freguesia_d = CBData.PromLocal.getColValue("freguesia_d", i);
        String concelho_d = CBData.PromLocal.getColValue("concelho_d", i);
        return " [" + concelho_d + " | " + freguesia_d + "]";
      }
    return " ?";
  }
}
