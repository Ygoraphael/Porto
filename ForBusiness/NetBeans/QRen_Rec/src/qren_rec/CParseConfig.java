package fme;

import java.awt.Dimension;
import java.util.HashMap;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































class CParseConfig
  extends DefaultHandler
{
  static HashMap hconfig = new HashMap();
  
  StringBuffer textBuffer;
  int Status;
  String a_tag;
  String path = new String("/");
  
  String pagina;
  String classe;
  String titulo;
  HashMap params = null;
  
  public CParseConfig() {
    Status = 0;
  }
  
  void _path_grow(String tag) {
    path = (path + "/" + tag);
  }
  
  void _path_back(String tag)
  {
    path = path.substring(0, path.length() - tag.length() - 1);
  }
  
  public void startDocument()
    throws SAXException
  {}
  
  public void endDocument()
    throws SAXException
  {}
  
  public void startElement(String namespaceURI, String sName, String qName, Attributes attrs) throws SAXException
  {
    if (Status == 1) {
      _path_grow(a_tag);
    }
    
    a_tag = qName;
    Status = 1;
    textBuffer = null;
  }
  

  public void endElement(String namespaceURI, String sName, String qName)
    throws SAXException
  {
    if ((Status == 1) && (qName == a_tag)) { String v;
      String v;
      if (textBuffer == null) v = ""; else {
        v = textBuffer.toString();
      }
      
      if ((path.equals("//fme-config/paginas/reg")) && (qName.equals("pagina"))) {
        pagina = v;
      }
      
      if ((path.equals("//fme-config/paginas/reg")) && (qName.equals("classe"))) {
        classe = v;
      }
      
      if ((path.equals("//fme-config/paginas/reg")) && (qName.equals("titulo"))) {
        titulo = v;
        
        params = new HashMap();
      }
      if (path.equals("//fme-config/paginas/reg/params"))
      {
        params.put(qName, v);
      }
      if (path.equals("//fme-config/tabelas"))
      {
        CTabelas.mount_cfg_table(qName, v);
      }
      if (path.equals("//fme-config/hconfig"))
      {
        hconfig.put(qName, v);
        
        if (qName.equals("fme-config")) {
          fmeApp.Config = v;
        }
      }
    }
    
    if (Status == 0) {
      if (path.equals("//fme-config/paginas/reg"))
      {
        try
        {

          Object p = Class.forName("fme.Frame_" + classe).newInstance();
          Dimension d = ((Pagina_Base)p).getSize();
          ((JInternalFrame)p).setPreferredSize(d);
          fmeApp.Paginas.add((JInternalFrame)p, pagina, titulo);
          ((Pagina_Base)p).set_params(pagina, params);
        } catch (Exception e) {
          e.printStackTrace();
          JOptionPane.showMessageDialog(null, "Config (" + classe + "):" + e.toString());
        }
      }
      
      _path_back(qName);
    }
    Status = 0;
    textBuffer = null;
  }
  
  public void characters(char[] buf, int offset, int len) throws SAXException {
    String s = new String(buf, offset, len);
    if (textBuffer == null) {
      textBuffer = new StringBuffer(s);
    } else {
      textBuffer.append(s);
    }
  }
}
