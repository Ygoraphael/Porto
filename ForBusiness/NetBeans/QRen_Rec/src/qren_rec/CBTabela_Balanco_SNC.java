package fme;

import javax.swing.JScrollPane;
import javax.swing.JTable;
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































class CBTabela_Balanco_SNC
  extends CBTabela
{
  Frame_Balanco_SNC P14;
  
  public String getPagina()
  {
    return "Balanco_SNC";
  }
  

  int tab_index = 0;
  int rowActFixoTang = 2;
  int rowActIntang = 5;
  
  boolean is_inov = true;
  
  CBTabela_Balanco_SNC() {
    P14 = ((Frame_Balanco_SNC)fmeApp.Paginas.getPage("Balanco_SNC"));
    if (P14 == null) return;
    initialize();
  }
  
  CBTabela_Balanco_SNC(Frame_Balanco_SNC p, int idx) {
    P14 = p;
    tab_index = idx;
    initialize();
  }
  
  void initialize() {
    tag = "Balanco_SNC";
    started = true;
    

    cols = new CHTabColModel[13];
    cols[0] = new CHTabColModel("conta", "Conta", true, false, false, null);
    cols[1] = new CHTabColModel("conta_d", "Rubricas", false, false, false, null);
    cols[2] = new CHTabColModel("val_p3", "Ano -3", true, true, true, CFLib.VLD_VALOR_S);
    cols[3] = new CHTabColModel("val_p2", "Ano -2", true, true, true, CFLib.VLD_VALOR_S);
    cols[4] = new CHTabColModel("val_p1", "Ano -1", true, true, true, CFLib.VLD_VALOR_S);
    cols[5] = new CHTabColModel("val_0", "Ano 0", true, true, true, CFLib.VLD_VALOR_S);
    cols[6] = new CHTabColModel("val_1", "Ano 1", true, true, true, CFLib.VLD_VALOR_S);
    cols[7] = new CHTabColModel("val_2", "Ano 2", true, true, true, CFLib.VLD_VALOR_S);
    cols[8] = new CHTabColModel("val_3", "Ano 3", true, true, true, CFLib.VLD_VALOR_S);
    cols[9] = new CHTabColModel("val_4", "Ano 4", true, true, true, CFLib.VLD_VALOR_S);
    cols[10] = new CHTabColModel("val_5", "Ano 5", true, true, is_inov, CFLib.VLD_VALOR_S);
    cols[11] = new CHTabColModel("val_6", "Ano 6", true, true, is_inov, CFLib.VLD_VALOR_S);
    cols[12] = new CHTabColModel("val_7", "Ano 7", true, true, is_inov, CFLib.VLD_VALOR_S);
    
    init_dados(64);
    

    init_handler(new CHTabQuadro(), P14.getJTable_Balanco());
    P14.getJTable_Balanco().addKeyListener(new TableKeyListener(this));
    handler.width = P14.getJScrollPane_Balanco().getWidth();
    
    handler.set_col_text(2, 0.2D, "R");
    handler.set_col_text(3, 0.2D, "R");
    handler.set_col_text(4, 0.2D, "R");
    handler.set_col_text(5, 0.2D, "R");
    handler.set_col_text(6, 0.2D, "R");
    handler.set_col_text(7, 0.2D, "R");
    handler.set_col_text(8, 0.2D, "R");
    handler.set_col_text(9, 0.2D, "R");
    if (is_inov) {
      handler.set_col_text(10, 0.2D, "R");
      handler.set_col_text(11, 0.2D, "R");
      handler.set_col_text(12, 0.2D, "R");
    }
    
    cols[0].disable_row_calc = true;
    cols[1].disable_row_calc = true;
    
    ((CHTabQuadro)handler).start_rows();
    handler).row_editable[0] = false;
    handler).row_editable[1] = false;
    handler).row_editable[13] = false;
    handler).row_editable[27] = false;
    handler).row_editable[28] = false;
    handler).row_editable[42] = false;
    handler).row_editable[43] = false;
    handler).row_editable[44] = false;
    handler).row_editable[50] = false;
    handler).row_editable[62] = false;
    handler).row_editable[63] = false;
    
    keyCol = 0;
    
    ((String[])dados.elementAt(0))[0] = "-";
    ((String[])dados.elementAt(1))[0] = "s11";
    ((String[])dados.elementAt(2))[0] = "s1101";
    ((String[])dados.elementAt(3))[0] = "s1102";
    ((String[])dados.elementAt(4))[0] = "s1103";
    ((String[])dados.elementAt(5))[0] = "s1104";
    ((String[])dados.elementAt(6))[0] = "s1105";
    ((String[])dados.elementAt(7))[0] = "s1106";
    ((String[])dados.elementAt(8))[0] = "s1107";
    ((String[])dados.elementAt(9))[0] = "s1108";
    ((String[])dados.elementAt(10))[0] = "s1109";
    ((String[])dados.elementAt(11))[0] = "s1110";
    ((String[])dados.elementAt(12))[0] = "s1111";
    ((String[])dados.elementAt(13))[0] = "s12";
    ((String[])dados.elementAt(14))[0] = "s1201";
    ((String[])dados.elementAt(15))[0] = "s1202";
    ((String[])dados.elementAt(16))[0] = "s1203";
    ((String[])dados.elementAt(17))[0] = "s1204";
    ((String[])dados.elementAt(18))[0] = "s1205";
    ((String[])dados.elementAt(19))[0] = "s1206";
    ((String[])dados.elementAt(20))[0] = "s1207";
    ((String[])dados.elementAt(21))[0] = "s1208";
    ((String[])dados.elementAt(22))[0] = "s1209";
    ((String[])dados.elementAt(23))[0] = "s1210";
    ((String[])dados.elementAt(24))[0] = "s1211";
    ((String[])dados.elementAt(25))[0] = "s1213";
    ((String[])dados.elementAt(26))[0] = "s1212";
    ((String[])dados.elementAt(27))[0] = "s1";
    ((String[])dados.elementAt(28))[0] = "-";
    ((String[])dados.elementAt(29))[0] = "s2101";
    ((String[])dados.elementAt(30))[0] = "s2102";
    ((String[])dados.elementAt(31))[0] = "s2103";
    ((String[])dados.elementAt(32))[0] = "s2104";
    ((String[])dados.elementAt(33))[0] = "s2105";
    ((String[])dados.elementAt(34))[0] = "s2106";
    ((String[])dados.elementAt(35))[0] = "s2107";
    ((String[])dados.elementAt(36))[0] = "s2108";
    ((String[])dados.elementAt(37))[0] = "s2109";
    ((String[])dados.elementAt(38))[0] = "s2110";
    ((String[])dados.elementAt(39))[0] = "s22";
    ((String[])dados.elementAt(40))[0] = "s23";
    ((String[])dados.elementAt(41))[0] = "s24";
    ((String[])dados.elementAt(42))[0] = "s2";
    ((String[])dados.elementAt(43))[0] = "-";
    ((String[])dados.elementAt(44))[0] = "s31";
    ((String[])dados.elementAt(45))[0] = "s3101";
    ((String[])dados.elementAt(46))[0] = "s3102";
    ((String[])dados.elementAt(47))[0] = "s3103";
    ((String[])dados.elementAt(48))[0] = "s3104";
    ((String[])dados.elementAt(49))[0] = "s3105";
    ((String[])dados.elementAt(50))[0] = "s32";
    ((String[])dados.elementAt(51))[0] = "s3201";
    ((String[])dados.elementAt(52))[0] = "s3202";
    ((String[])dados.elementAt(53))[0] = "s3203";
    ((String[])dados.elementAt(54))[0] = "s3204";
    ((String[])dados.elementAt(55))[0] = "s3205";
    ((String[])dados.elementAt(56))[0] = "s3206";
    ((String[])dados.elementAt(57))[0] = "s3207";
    ((String[])dados.elementAt(58))[0] = "s3208";
    ((String[])dados.elementAt(59))[0] = "s3209";
    ((String[])dados.elementAt(60))[0] = "s3210";
    ((String[])dados.elementAt(61))[0] = "s3211";
    ((String[])dados.elementAt(62))[0] = "s3";
    ((String[])dados.elementAt(63))[0] = "s4";
    


    ((String[])dados.elementAt(0))[1] = "                                                 ATIVO";
    ((String[])dados.elementAt(1))[1] = " Ativo não corrente";
    ((String[])dados.elementAt(2))[1] = "    Ativos fixos tangíveis";
    ((String[])dados.elementAt(3))[1] = "    Propriedades de investimento";
    ((String[])dados.elementAt(4))[1] = "    Goodwill";
    ((String[])dados.elementAt(5))[1] = "    Ativos intangíveis";
    ((String[])dados.elementAt(6))[1] = "    Ativos biológicos";
    ((String[])dados.elementAt(7))[1] = "    Participações financeiras - método da equivalência patrimonial";
    ((String[])dados.elementAt(8))[1] = "    Participações financeiras - outros métodos";
    ((String[])dados.elementAt(9))[1] = "    Acionistas/sócios";
    ((String[])dados.elementAt(10))[1] = "    Outros ativos financeiros";
    ((String[])dados.elementAt(11))[1] = "    Ativos por impostos diferidos";
    ((String[])dados.elementAt(12))[1] = "    Investimentos financeiros (*)";
    ((String[])dados.elementAt(13))[1] = " Ativo corrente";
    ((String[])dados.elementAt(14))[1] = "    Inventários";
    ((String[])dados.elementAt(15))[1] = "    Ativos biológicos";
    ((String[])dados.elementAt(16))[1] = "    Clientes";
    ((String[])dados.elementAt(17))[1] = "    Adiantamentos a fornecedores";
    ((String[])dados.elementAt(18))[1] = "    Estado e outros entes públicos";
    ((String[])dados.elementAt(19))[1] = "    Acionistas/sócios";
    ((String[])dados.elementAt(20))[1] = "    Outras contas a receber";
    ((String[])dados.elementAt(21))[1] = "    Diferimentos";
    ((String[])dados.elementAt(22))[1] = "    Ativos financeiros detidos para negociação";
    ((String[])dados.elementAt(23))[1] = "    Outros ativos financeiros";
    ((String[])dados.elementAt(24))[1] = "    Ativos não correntes detidos para venda";
    ((String[])dados.elementAt(25))[1] = "    Outros ativos correntes";
    ((String[])dados.elementAt(26))[1] = "    Caixa e depósitos bancários";
    ((String[])dados.elementAt(27))[1] = " TOTAL DO ATIVO";
    
    ((String[])dados.elementAt(28))[1] = "                                CAPITAL PRÓPRIO E PASSIVO";
    ((String[])dados.elementAt(29))[1] = " Capital realizado";
    ((String[])dados.elementAt(30))[1] = " Ações (quotas) próprias";
    ((String[])dados.elementAt(31))[1] = " Outros instrumentos de capital próprio";
    ((String[])dados.elementAt(32))[1] = " Prémios de emissão";
    ((String[])dados.elementAt(33))[1] = " Reservas legais";
    ((String[])dados.elementAt(34))[1] = " Outras reservas";
    ((String[])dados.elementAt(35))[1] = " Resultados transitados";
    ((String[])dados.elementAt(36))[1] = " Ajustamentos em ativos financeiros";
    ((String[])dados.elementAt(38))[1] = " Outras variações no capital próprio";
    ((String[])dados.elementAt(39))[1] = " Resultado líquido do período";
    ((String[])dados.elementAt(40))[1] = " Interesses minoritários";
    ((String[])dados.elementAt(41))[1] = " Dividendos antecipados";
    ((String[])dados.elementAt(42))[1] = " TOTAL DO CAPITAL PRÓPRIO";
    
    ((String[])dados.elementAt(43))[1] = "                                                 PASSIVO";
    ((String[])dados.elementAt(44))[1] = " Passivo não corrente";
    ((String[])dados.elementAt(45))[1] = "    Provisões";
    ((String[])dados.elementAt(46))[1] = "    Financiamentos obtidos";
    ((String[])dados.elementAt(47))[1] = "    Responsabilidades por benefícios pós-emprego";
    ((String[])dados.elementAt(48))[1] = "    Passivos por impostos diferidos";
    ((String[])dados.elementAt(49))[1] = "    Outras contas a pagar";
    ((String[])dados.elementAt(50))[1] = " Passivo corrente";
    ((String[])dados.elementAt(51))[1] = "    Fornecedores";
    ((String[])dados.elementAt(52))[1] = "    Adiantamentos de clientes";
    ((String[])dados.elementAt(53))[1] = "    Estado e outros entes públicos";
    ((String[])dados.elementAt(54))[1] = "    Acionistas/sócios";
    ((String[])dados.elementAt(55))[1] = "    Financiamentos obtidos";
    ((String[])dados.elementAt(56))[1] = "    Outras contas a pagar";
    ((String[])dados.elementAt(57))[1] = "    Diferimentos";
    ((String[])dados.elementAt(58))[1] = "    Passivos financeiros detidos para negociação";
    ((String[])dados.elementAt(59))[1] = "    Outros passivos financeiros";
    ((String[])dados.elementAt(60))[1] = "    Passivos não correntes detidos para venda";
    ((String[])dados.elementAt(61))[1] = "    Outros passivos correntes";
    ((String[])dados.elementAt(62))[1] = " TOTAL DO PASSIVO";
    ((String[])dados.elementAt(63))[1] = " TOTAL DO CAPITAL PRÓPRIO + PASSIVO";
    

    handler).row_autocalc[1] = "$soma(+2,+3,+4,+5,+6,+7,+8,+9,+10,+11,+12)";
    handler).row_autocalc[13] = "$soma(+14,+15,+16,+17,+18,+19,+20,+21,+22,+23,+24,+25,+26)";
    handler).row_autocalc[27] = "$soma(+1,+13)";
    handler).row_autocalc[42] = "$soma(+29,+30,+31,+32,+33,+34,+35,+36,+37,+38,+39,+40,+41)";
    handler).row_autocalc[44] = "$soma(+45,+46,+47,+48,+49)";
    handler).row_autocalc[50] = "$soma(+51,+52,+53,+54,+55,+56,+57,+58,+59,+60,+61)";
    handler).row_autocalc[62] = "$soma(+44,+50)";
    handler).row_autocalc[63] = "$soma(+42,+62)";
    
    CBData.Params.bind_ano_cand_update(this);
  }
  
  void on_update(String colname, int nRow, String v)
  {
    autocalc();
    handler.j.repaint();
  }
  
  public void on_external_update(String tag) {
    int ano = (int)CBData.Params.getByName("ano_cand").valueAsDouble();
    cols[2].col_name = Integer.toString(ano - 3);
    cols[3].col_name = Integer.toString(ano - 2);
    cols[4].col_name = Integer.toString(ano - 1);
    cols[5].col_name = Integer.toString(ano);
    cols[6].col_name = Integer.toString(ano + 1);
    cols[7].col_name = Integer.toString(ano + 2);
    cols[8].col_name = Integer.toString(ano + 3);
    cols[9].col_name = Integer.toString(ano + 4);
    cols[10].col_name = Integer.toString(ano + 5);
    cols[11].col_name = Integer.toString(ano + 6);
    cols[12].col_name = Integer.toString(ano + 7);
    handler.repaint_col_names();
  }
  

  CHValid_Grp validar(CHValid_Grp err_list, String cp)
  {
    String titulo = "Balanços";
    if (cp.length() > 0) titulo = titulo + cp;
    if (err_list == null) { err_list = new CHValid_Grp(this, titulo);
    }
    
    if ((isEmpty()) && (tab_index > 0)) { return err_list;
    }
    int ano_cand = (int)CBData.Params.getByName("ano_cand").valueAsDouble();
    int ano_inicial = ano_cand;
    String v = PromotorgetByName"dt_inicio_act"v;
    if (v.length() == 10)
      ano_inicial = Integer.parseInt(v.substring(0, 4));
    int idx_i = 5 - (ano_cand - ano_inicial);
    if (idx_i < 2) { idx_i = 2;
    }
    int n_anos = 1;
    int ano_fim = ano_cand + n_anos;
    String vf = DadosProjectogetByName"dt_fim"v;
    if (vf.length() == 10) {
      ano_fim = Integer.parseInt(vf.substring(0, 4)) + n_anos;
    }
    for (int i = idx_i; i <= 12; i++) {
      String ano_s = cols[i].col_name;
      
      double activo = _lib.to_double(((String[])dados.elementAt(27))[i]);
      double cp_pass = _lib.to_double(((String[])dados.elementAt(63))[i]);
      if ((isColEmpty(i)) && (Integer.parseInt(ano_s) <= ano_fim)) {
        err_list.add_msg(new CHValid_Msg("balanco", "Balanço obrigatório para o ano " + ano_s));
      } else if (activo != cp_pass)
        err_list.add_msg(new CHValid_Msg("balanco", "O Ativo tem de ser igual à soma do Capital Próprio com o Passivo, para o ano " + ano_s));
    }
    return err_list;
  }
}
